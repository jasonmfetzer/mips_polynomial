#lab_two_402
#fetzer_jason_402_choi
#a*(x^2) + (b*x) + (c) evaluate and print result

.data # variables for program

	promptA: .asciiz "\nInput value for A:\n"
	promptB: .asciiz "\nInput value for B:\n"
	promptC: .asciiz "\nInput value for C:\n"
	promptX: .asciiz "\nInput value for X:\n"
	result: .asciiz "\nYour result evaluates as: \n"
	#int: .word #

.globl main
.text
	main:
		li $v0, 4 #string
		la $a0, promptA #address
		syscall
		li $v0, 5 #read integer
		syscall	
		move $t0, $v0
#t0 now 'a' var

		
		li $v0, 4 #string
		la $a0, promptB #address
		syscall
		li $v0, 5 # read integer
		syscall	
		move $t1, $v0

#t1 now 'b' var

		li $v0, 4 #string
		la $a0, promptC #address
		syscall
		li $v0, 5  #read integer
		syscall	
		move $t2, $v0
#t2 now 'c' var

		li $v0, 4 #string
		la $a0, promptX #address
		syscall
		li $v0, 5 #read integer
		syscall	
		move $t3, $v0
#t3 now 'x' var
#logic in temporaries
			
		mul $t4,$t3,$t3 #t4 is x^2
		mul $t5,$t1,$t3 #t5 is b*x, $t2 is c
		mul $t6,$t0, $t4 # first part of equation
		add $t7, $t6, $t5 #t7 now first and second
		add $t8, $t7, $t2 #store in t8 to print

		
		#print out sum of $t8
    		li $v0, 4       # load syscall print int into $v0
		la $a0, result
		syscall
		
    		   
    		
		li, $v0,1 #to print integer
		move $a0, $t8
    		syscall


	Done:

    		li $v0, 10    #exit
        	syscall



